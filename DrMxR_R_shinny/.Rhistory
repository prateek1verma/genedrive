# # Display Plot
# print(fig1C_plot)
#
# # Save the figure in PDF and PNG formats
# # ggsave("Fig1C_Sensitivity_vs_PoolSize.pdf", plot = fig1C_plot, width = 6, height = 6, units = "in")
# # ggsave("Fig1C_Sensitivity_vs_PoolSize.png", plot = fig1C_plot, width = 6, height = 6, units = "in", dpi = 300, bg = "white")
# Load necessary library
library(ggplot2)
# Define parameters
x <- 0.05                 # Gene drive carrier frequency (5%)
pGD0 <- 0.95               # Desired detection probability
pool_sizes <- c(1, 5, 10, 20)  # Pool sizes to compare
sensitivity_values <- seq(0.2, 1, by = 0.01)  # Sensitivity range (40% to 100%)
# Function to calculate required sample size for pooled testing
required_sample_size_pooled <- function(s, m, x = 0.05, pGD = pGD0) {
x_m <- 1 - (1 - x)^m  # Probability that at least one gene drive mosquito is in the pool
if (x_m * s >= 1) return(NA)  # Avoid log(0) or negative values
n <-  m *ceiling(log(1 - pGD) / log(1 - x_m * s))
return(n)
}
# Create the plotting data
plot_data_C <- expand.grid(Sensitivity = sensitivity_values, PoolSize = pool_sizes)
plot_data_C$SampleSize <- mapply(required_sample_size_pooled,
s = plot_data_C$Sensitivity,
m = plot_data_C$PoolSize)
# Plot
fig1C_plot <- ggplot(plot_data_C, aes(x = Sensitivity * 100, y = SampleSize, color = factor(PoolSize))) +
geom_line(size = 1.2) +
geom_hline(yintercept = c(100, 200), linetype = "dashed", color = "grey40") +
scale_color_manual(name = "Pool Size (m)", values = c("black","#1f77b4", "#d62728", "#2ca02c")) +
scale_x_continuous(name = "Test Sensitivity per Mosquito (%)", breaks = seq(20, 100, 10)) +
scale_y_continuous(name = "Required Sample Size", limits = c(50, 260)) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
axis.title = element_text(face = "bold"),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Display the plot
print(fig1C_plot)
# Optionally, save the figure
ggsave("Fig1C_SampleSize_vs_Sensitivity_PoolSizes.pdf", plot = fig1C_plot, width = 6, height = 4, units = "in", bg = "white")
ggsave("Fig1C_SampleSize_vs_Sensitivity_PoolSizes.png", plot = fig1C_plot, width = 6, height = 4, units = "in", dpi = 300, bg = "white")
# # Load necessary libraries
# library(ggplot2)
#
# # Define parameters
# x0 <- 0.05       # Gene drive carrier frequency (5%)
# n_total0 <- 100  # Total sample size
# pGD_values <- c(0.95, 0.99)  # Desired probabilities of detection
#
# # Function to calculate required sensitivity per pool
# required_sensitivity_per_pool <- function(m, x = x0, pGD, n_total = n_total0) {
#   x_m <- 1 - (1 - x)^m
#   ifelse(x_m <= 0, NA, (1 - (1 - pGD)^(m / n_total)) / x_m)
# }
#
# # Pool sizes to evaluate
# pool_sizes <- seq(2, 20, by = 2)
#
# # Create data for all pGD values
# plot_data_C <- do.call(rbind, lapply(pGD_values, function(pGD) {
#   required_sens <- sapply(pool_sizes, required_sensitivity_per_pool, pGD = pGD)
#   data.frame(
#     PoolSize = pool_sizes,
#     RequiredSensitivity = required_sens * 100,  # Convert to percentage
#     DetectionProbability = paste0("pGD = ", pGD * 100, "%")
#   )
# }))
#
# # Plot
# fig1C_plot <-fig1C_plot <- ggplot(plot_data_C, aes(x = PoolSize, y = RequiredSensitivity, color = DetectionProbability)) +
#   geom_line(size = 1.2) +
#   geom_hline(yintercept = c(65, 92), linetype = "dashed", color = "grey40") +
#   annotate("text", x = 3, y = 67, label = "Minimally Acceptable: 65%", hjust = 0, size = 4) +
#   annotate("text", x = 3, y = 94, label = "Ideal: 92%", hjust = 0, size = 4) +
#   scale_x_continuous(name = "Pool Size (Mosquitoes per Pool)", breaks = seq(2, 20, 2)) +
#   scale_y_continuous(name = "Required Test Sensitivity per Pool (%)", limits = c(55, 100)) +
#   scale_color_manual(values = c( "#d62728","#1f77b4")) +
#   theme_minimal(base_size = 14) +
#   theme(
#     panel.grid.major = element_line(color = "grey80", size = 0.3),
#     panel.grid.minor = element_blank(),
#     axis.title = element_text(face = "bold"),
#     plot.title = element_text(hjust = 0.5, face = "bold"),
#     legend.title = element_blank(),
#     legend.position = "top"
#   )
#  # +  ggtitle("Required Sensitivity per Pool vs. Pool Size\n(Use Case 1: Gene Drive Presence Detection)")
#
# # Display Plot
# print(fig1C_plot)
#
# # Save the figure in PDF and PNG formats
# # ggsave("Fig1C_Sensitivity_vs_PoolSize.pdf", plot = fig1C_plot, width = 6, height = 6, units = "in")
# # ggsave("Fig1C_Sensitivity_vs_PoolSize.png", plot = fig1C_plot, width = 6, height = 6, units = "in", dpi = 300, bg = "white")
# Load necessary library
library(ggplot2)
# Define parameters
x <- 0.05                 # Gene drive carrier frequency (5%)
pGD0 <- 0.95               # Desired detection probability
pool_sizes <- c(1, 5, 10, 20)  # Pool sizes to compare
sensitivity_values <- seq(0.2, 1, by = 0.01)  # Sensitivity range (40% to 100%)
# Function to calculate required sample size for pooled testing
required_sample_size_pooled <- function(s, m, x = 0.05, pGD = pGD0) {
x_m <- 1 - (1 - x)^m  # Probability that at least one gene drive mosquito is in the pool
if (x_m * s >= 1) return(NA)  # Avoid log(0) or negative values
n <-  m *ceiling(log(1 - pGD) / log(1 - x_m * s))
return(n)
}
# Create the plotting data
plot_data_C <- expand.grid(Sensitivity = sensitivity_values, PoolSize = pool_sizes)
plot_data_C$SampleSize <- mapply(required_sample_size_pooled,
s = plot_data_C$Sensitivity,
m = plot_data_C$PoolSize)
# Plot
fig1C_plot <- ggplot(plot_data_C, aes(x = Sensitivity * 100, y = SampleSize, color = factor(PoolSize))) +
geom_line(size = 1.2) +
geom_hline(yintercept = c(100, 200), linetype = "dashed", color = "grey40") +
scale_color_manual(name = "Pool Size (m)", values = c("black","#1f77b4", "#d62728", "#2ca02c")) +
scale_x_continuous(name = "Test Sensitivity per Mosquito (%)", breaks = seq(20, 100, 10)) +
scale_y_continuous(name = "Required Sample Size", limits = c(50, 260)) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
axis.title = element_text(face = "bold"),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# Display the plot
print(fig1C_plot)
# Optionally, save the figure
ggsave("Fig1C_SampleSize_vs_Sensitivity_PoolSizes.pdf", plot = fig1C_plot, width = 6, height = 4, units = "in", bg = "white")
ggsave("Fig1C_SampleSize_vs_Sensitivity_PoolSizes.png", plot = fig1C_plot, width = 6, height = 4, units = "in", dpi = 300, bg = "white")
# # Load necessary libraries
# library(ggplot2)
#
# # Define parameters
# x0 <- 0.05       # Gene drive carrier frequency (5%)
# n_total0 <- 100  # Total sample size
# pGD_values <- c(0.95, 0.99)  # Desired probabilities of detection
#
# # Function to calculate required sensitivity per pool
# required_sensitivity_per_pool <- function(m, x = x0, pGD, n_total = n_total0) {
#   x_m <- 1 - (1 - x)^m
#   ifelse(x_m <= 0, NA, (1 - (1 - pGD)^(m / n_total)) / x_m)
# }
#
# # Pool sizes to evaluate
# pool_sizes <- seq(2, 20, by = 2)
#
# # Create data for all pGD values
# plot_data_C <- do.call(rbind, lapply(pGD_values, function(pGD) {
#   required_sens <- sapply(pool_sizes, required_sensitivity_per_pool, pGD = pGD)
#   data.frame(
#     PoolSize = pool_sizes,
#     RequiredSensitivity = required_sens * 100,  # Convert to percentage
#     DetectionProbability = paste0("pGD = ", pGD * 100, "%")
#   )
# }))
#
# # Plot
# fig1C_plot <-fig1C_plot <- ggplot(plot_data_C, aes(x = PoolSize, y = RequiredSensitivity, color = DetectionProbability)) +
#   geom_line(size = 1.2) +
#   geom_hline(yintercept = c(65, 92), linetype = "dashed", color = "grey40") +
#   annotate("text", x = 3, y = 67, label = "Minimally Acceptable: 65%", hjust = 0, size = 4) +
#   annotate("text", x = 3, y = 94, label = "Ideal: 92%", hjust = 0, size = 4) +
#   scale_x_continuous(name = "Pool Size (Mosquitoes per Pool)", breaks = seq(2, 20, 2)) +
#   scale_y_continuous(name = "Required Test Sensitivity per Pool (%)", limits = c(55, 100)) +
#   scale_color_manual(values = c( "#d62728","#1f77b4")) +
#   theme_minimal(base_size = 14) +
#   theme(
#     panel.grid.major = element_line(color = "grey80", size = 0.3),
#     panel.grid.minor = element_blank(),
#     axis.title = element_text(face = "bold"),
#     plot.title = element_text(hjust = 0.5, face = "bold"),
#     legend.title = element_blank(),
#     legend.position = "top"
#   )
#  # +  ggtitle("Required Sensitivity per Pool vs. Pool Size\n(Use Case 1: Gene Drive Presence Detection)")
#
# # Display Plot
# print(fig1C_plot)
#
# # Save the figure in PDF and PNG formats
# # ggsave("Fig1C_Sensitivity_vs_PoolSize.pdf", plot = fig1C_plot, width = 6, height = 6, units = "in")
# # ggsave("Fig1C_Sensitivity_vs_PoolSize.png", plot = fig1C_plot, width = 6, height = 6, units = "in", dpi = 300, bg = "white")
# Load necessary library
library(ggplot2)
# Define parameters
pFP <- 0.05                 # Acceptable sample-wide false positive rate (5%)
pool_sizes <- c(1, 5, 10, 20)  # Pool sizes to compare
specificity_values <- seq(0.994, 1, by = 0.00005)  # Specificity range (99.9% to 100%)
# Function to calculate required sample size for pooled testing based on specificity
required_sample_size_specificity <- function(sp, m, pFP = 0.05) {
f <- 1 - sp  # False positive rate per mosquito
f_m <- 1 - (1 - f)^m
if (f >= 1) return(NA)  # Avoid log(0) or invalid values
n <- m *ceiling(log(1 - pFP) / log(1 - f)) # assumes n/m to be integer
# n <- ceiling(m * log(1 - pFP) / log(1 - f))
return(n)
}
# Create the plotting data
plot_data_D <- expand.grid(Specificity = specificity_values, PoolSize = pool_sizes)
plot_data_D$SampleSize <- mapply(required_sample_size_specificity,
sp = plot_data_D$Specificity,
m = plot_data_D$PoolSize)
# Plot
fig1D_plot <- ggplot(plot_data_D, aes(x = Specificity * 100, y = SampleSize, color = factor(PoolSize))) +
geom_line(size = 1.2) +
geom_hline(yintercept = c(100, 200), linetype = "dashed", color = "grey40") +
scale_color_manual(name = "Pool Size (m)", values = c("black","#1f77b4", "#d62728", "#2ca02c")) +
scale_x_continuous(name = "Test Specificity per Mosquito (%)", breaks = seq(99.4, 100, 0.1)) +
scale_y_continuous(name = "Required Sample Size", limits = c(5, 300)) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
axis.title = element_text(face = "bold"),
plot.title = element_blank()  # No plot title
)
# Display the plot
print(fig1D_plot)
# Save the figure with white background and 300 DPI
ggsave("Fig1D_SampleSize_vs_Specificity_PoolSizes.pdf", plot = fig1D_plot, width = 6, height = 4, units = "in", bg = "white")
ggsave("Fig1D_SampleSize_vs_Specificity_PoolSizes.png", plot = fig1D_plot, width = 6, height = 4, units = "in", dpi = 300, bg = "white")
# # Load necessary libraries
# library(ggplot2)
#
# # Define parameters
# pFP <- 0.05  # Acceptable sample-wide false positive rate (5%)
# n_total_values <- c(100, 200)  # Sample sizes to compare
#
# # Function to calculate required specificity per pool
# required_specificity_per_pool <- function(m, pFP = 0.05, n_total) {
#   f_m <- 1 - (1 - pFP)^(m / n_total)
#   specificity <- 1 - f_m
#   return(specificity)
# }
#
# # Pool sizes to evaluate
# pool_sizes <- seq(2, 20, by = 1)
#
# # Create data for all sample sizes
# plot_data_D <- do.call(rbind, lapply(n_total_values, function(n_total) {
#   required_specs <- sapply(pool_sizes, required_specificity_per_pool, pFP = pFP, n_total = n_total)
#   data.frame(
#     PoolSize = pool_sizes,
#     RequiredSpecificity = required_specs * 100,  # Convert to percentage
#     SampleSize = paste0("n = ", n_total)
#   )
# }))
#
# # Plot
# fig1D_plot <- fig1D_plot <- ggplot(plot_data_D, aes(x = PoolSize, y = RequiredSpecificity, color = SampleSize)) + #  linetype = SampleSize
#   geom_line(size = 1.2) +
#   geom_hline(yintercept = c(99.5, 99.75), linetype = "dashed", color = "grey40") +
#   annotate("text", x = 10, y = 99.53, label = "Minimally Acceptable: 99.5%", hjust = 0, size = 4) +
#   annotate("text", x = 10, y = 99.78, label = "Ideal: 99.75%", hjust = 0, size = 4) +
#   scale_x_continuous(name = "Pool Size (Mosquitoes per Pool)", breaks = seq(2, 20, 2)) +
#   scale_y_continuous(name = "Required Test Specificity per Pool (%)", limits = c(99, 100)) +
#   scale_color_manual(values = c("#d62728","#1f77b4")) +  # Blue and Red
#   theme_minimal(base_size = 14) +
#   theme(
#     panel.grid.major = element_line(color = "grey80", size = 0.3),
#     panel.grid.minor = element_blank(),
#     axis.title = element_text(face = "bold"),
#     plot.title = element_text(hjust = 0.5, face = "bold"),
#     legend.title = element_blank(),
#     legend.position = "top"
#   )
#   # +  ggtitle("Required Specificity per Pool vs. Pool Size\n(Use Case 1: Gene Drive Presence Detection)")
#
# # Display Plot
# print(fig1D_plot)
#
# # Save the figure in PDF and PNG formats
# # ggsave("Fig1D_Specificity_vs_PoolSize.pdf", plot = fig1D_plot, width = 6, height = 6, units = "in")
# # ggsave("Fig1D_Specificity_vs_PoolSize.png", plot = fig1D_plot, width = 6, height = 6, units = "in", dpi = 300, bg = "white")
# Load necessary library
library(ggplot2)
# Define parameters
pFP <- 0.05                 # Acceptable sample-wide false positive rate (5%)
pool_sizes <- c(1, 5, 10, 20)  # Pool sizes to compare
specificity_values <- seq(0.994, 1, by = 0.00005)  # Specificity range (99.9% to 100%)
# Function to calculate required sample size for pooled testing based on specificity
required_sample_size_specificity <- function(sp, m, pFP = 0.05) {
f <- 1 - sp  # False positive rate per mosquito
f_m <- 1 - (1 - f)^m
if (f >= 1) return(NA)  # Avoid log(0) or invalid values
n <- m *ceiling(log(1 - pFP) / log(1 - f_m)) # assumes n/m to be integer
# n <- ceiling(m * log(1 - pFP) / log(1 - f))
return(n)
}
# Create the plotting data
plot_data_D <- expand.grid(Specificity = specificity_values, PoolSize = pool_sizes)
plot_data_D$SampleSize <- mapply(required_sample_size_specificity,
sp = plot_data_D$Specificity,
m = plot_data_D$PoolSize)
# Plot
fig1D_plot <- ggplot(plot_data_D, aes(x = Specificity * 100, y = SampleSize, color = factor(PoolSize))) +
geom_line(size = 1.2) +
geom_hline(yintercept = c(100, 200), linetype = "dashed", color = "grey40") +
scale_color_manual(name = "Pool Size (m)", values = c("black","#1f77b4", "#d62728", "#2ca02c")) +
scale_x_continuous(name = "Test Specificity per Mosquito (%)", breaks = seq(99.4, 100, 0.1)) +
scale_y_continuous(name = "Required Sample Size", limits = c(5, 300)) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
axis.title = element_text(face = "bold"),
plot.title = element_blank()  # No plot title
)
# Display the plot
print(fig1D_plot)
# Save the figure with white background and 300 DPI
ggsave("Fig1D_SampleSize_vs_Specificity_PoolSizes.pdf", plot = fig1D_plot, width = 6, height = 4, units = "in", bg = "white")
ggsave("Fig1D_SampleSize_vs_Specificity_PoolSizes.png", plot = fig1D_plot, width = 6, height = 4, units = "in", dpi = 300, bg = "white")
# # Load necessary libraries
# library(ggplot2)
#
# # Define parameters
# pFP <- 0.05  # Acceptable sample-wide false positive rate (5%)
# n_total_values <- c(100, 200)  # Sample sizes to compare
#
# # Function to calculate required specificity per pool
# required_specificity_per_pool <- function(m, pFP = 0.05, n_total) {
#   f_m <- 1 - (1 - pFP)^(m / n_total)
#   specificity <- 1 - f_m
#   return(specificity)
# }
#
# # Pool sizes to evaluate
# pool_sizes <- seq(2, 20, by = 1)
#
# # Create data for all sample sizes
# plot_data_D <- do.call(rbind, lapply(n_total_values, function(n_total) {
#   required_specs <- sapply(pool_sizes, required_specificity_per_pool, pFP = pFP, n_total = n_total)
#   data.frame(
#     PoolSize = pool_sizes,
#     RequiredSpecificity = required_specs * 100,  # Convert to percentage
#     SampleSize = paste0("n = ", n_total)
#   )
# }))
#
# # Plot
# fig1D_plot <- fig1D_plot <- ggplot(plot_data_D, aes(x = PoolSize, y = RequiredSpecificity, color = SampleSize)) + #  linetype = SampleSize
#   geom_line(size = 1.2) +
#   geom_hline(yintercept = c(99.5, 99.75), linetype = "dashed", color = "grey40") +
#   annotate("text", x = 10, y = 99.53, label = "Minimally Acceptable: 99.5%", hjust = 0, size = 4) +
#   annotate("text", x = 10, y = 99.78, label = "Ideal: 99.75%", hjust = 0, size = 4) +
#   scale_x_continuous(name = "Pool Size (Mosquitoes per Pool)", breaks = seq(2, 20, 2)) +
#   scale_y_continuous(name = "Required Test Specificity per Pool (%)", limits = c(99, 100)) +
#   scale_color_manual(values = c("#d62728","#1f77b4")) +  # Blue and Red
#   theme_minimal(base_size = 14) +
#   theme(
#     panel.grid.major = element_line(color = "grey80", size = 0.3),
#     panel.grid.minor = element_blank(),
#     axis.title = element_text(face = "bold"),
#     plot.title = element_text(hjust = 0.5, face = "bold"),
#     legend.title = element_blank(),
#     legend.position = "top"
#   )
#   # +  ggtitle("Required Specificity per Pool vs. Pool Size\n(Use Case 1: Gene Drive Presence Detection)")
#
# # Display Plot
# print(fig1D_plot)
#
# # Save the figure in PDF and PNG formats
# # ggsave("Fig1D_Specificity_vs_PoolSize.pdf", plot = fig1D_plot, width = 6, height = 6, units = "in")
# # ggsave("Fig1D_Specificity_vs_PoolSize.png", plot = fig1D_plot, width = 6, height = 6, units = "in", dpi = 300, bg = "white")
# Load necessary library
library(ggplot2)
# Define parameters
pFP <- 0.05                 # Acceptable sample-wide false positive rate (5%)
pool_sizes <- c(1, 5, 10, 20)  # Pool sizes to compare
specificity_values <- seq(0.994, 1, by = 0.00005)  # Specificity range (99.9% to 100%)
# Function to calculate required sample size for pooled testing based on specificity
required_sample_size_specificity <- function(sp, m, pFP = 0.05) {
f <- 1 - sp  # False positive rate per mosquito
f_m <- 1 - (1 - f)^m
if (f >= 1) return(NA)  # Avoid log(0) or invalid values
n <- m *ceiling(log(1 - pFP) / log(1 - f)) # assumes n/m to be integer
# n <- ceiling(m * log(1 - pFP) / log(1 - f))
return(n)
}
# Create the plotting data
plot_data_D <- expand.grid(Specificity = specificity_values, PoolSize = pool_sizes)
plot_data_D$SampleSize <- mapply(required_sample_size_specificity,
sp = plot_data_D$Specificity,
m = plot_data_D$PoolSize)
# Plot
fig1D_plot <- ggplot(plot_data_D, aes(x = Specificity * 100, y = SampleSize, color = factor(PoolSize))) +
geom_line(size = 1.2) +
geom_hline(yintercept = c(100, 200), linetype = "dashed", color = "grey40") +
scale_color_manual(name = "Pool Size (m)", values = c("black","#1f77b4", "#d62728", "#2ca02c")) +
scale_x_continuous(name = "Test Specificity per Mosquito (%)", breaks = seq(99.4, 100, 0.1)) +
scale_y_continuous(name = "Required Sample Size", limits = c(5, 300)) +
theme_minimal(base_size = 14) +
theme(
legend.position = "top",
axis.title = element_text(face = "bold"),
plot.title = element_blank()  # No plot title
)
# Display the plot
print(fig1D_plot)
# Save the figure with white background and 300 DPI
ggsave("Fig1D_SampleSize_vs_Specificity_PoolSizes.pdf", plot = fig1D_plot, width = 6, height = 4, units = "in", bg = "white")
ggsave("Fig1D_SampleSize_vs_Specificity_PoolSizes.png", plot = fig1D_plot, width = 6, height = 4, units = "in", dpi = 300, bg = "white")
# # Load necessary libraries
# library(ggplot2)
#
# # Define parameters
# pFP <- 0.05  # Acceptable sample-wide false positive rate (5%)
# n_total_values <- c(100, 200)  # Sample sizes to compare
#
# # Function to calculate required specificity per pool
# required_specificity_per_pool <- function(m, pFP = 0.05, n_total) {
#   f_m <- 1 - (1 - pFP)^(m / n_total)
#   specificity <- 1 - f_m
#   return(specificity)
# }
#
# # Pool sizes to evaluate
# pool_sizes <- seq(2, 20, by = 1)
#
# # Create data for all sample sizes
# plot_data_D <- do.call(rbind, lapply(n_total_values, function(n_total) {
#   required_specs <- sapply(pool_sizes, required_specificity_per_pool, pFP = pFP, n_total = n_total)
#   data.frame(
#     PoolSize = pool_sizes,
#     RequiredSpecificity = required_specs * 100,  # Convert to percentage
#     SampleSize = paste0("n = ", n_total)
#   )
# }))
#
# # Plot
# fig1D_plot <- fig1D_plot <- ggplot(plot_data_D, aes(x = PoolSize, y = RequiredSpecificity, color = SampleSize)) + #  linetype = SampleSize
#   geom_line(size = 1.2) +
#   geom_hline(yintercept = c(99.5, 99.75), linetype = "dashed", color = "grey40") +
#   annotate("text", x = 10, y = 99.53, label = "Minimally Acceptable: 99.5%", hjust = 0, size = 4) +
#   annotate("text", x = 10, y = 99.78, label = "Ideal: 99.75%", hjust = 0, size = 4) +
#   scale_x_continuous(name = "Pool Size (Mosquitoes per Pool)", breaks = seq(2, 20, 2)) +
#   scale_y_continuous(name = "Required Test Specificity per Pool (%)", limits = c(99, 100)) +
#   scale_color_manual(values = c("#d62728","#1f77b4")) +  # Blue and Red
#   theme_minimal(base_size = 14) +
#   theme(
#     panel.grid.major = element_line(color = "grey80", size = 0.3),
#     panel.grid.minor = element_blank(),
#     axis.title = element_text(face = "bold"),
#     plot.title = element_text(hjust = 0.5, face = "bold"),
#     legend.title = element_blank(),
#     legend.position = "top"
#   )
#   # +  ggtitle("Required Specificity per Pool vs. Pool Size\n(Use Case 1: Gene Drive Presence Detection)")
#
# # Display Plot
# print(fig1D_plot)
#
# # Save the figure in PDF and PNG formats
# # ggsave("Fig1D_Specificity_vs_PoolSize.pdf", plot = fig1D_plot, width = 6, height = 6, units = "in")
# # ggsave("Fig1D_Specificity_vs_PoolSize.png", plot = fig1D_plot, width = 6, height = 6, units = "in", dpi = 300, bg = "white")
shiny::runApp('Downloads/327007e2b4d2451a93236b6ab2b0ae30')
runApp('Downloads/327007e2b4d2451a93236b6ab2b0ae30')
runApp('Downloads/327007e2b4d2451a93236b6ab2b0ae30')
runApp('Downloads/327007e2b4d2451a93236b6ab2b0ae30')
setwd("~/Downloads/327007e2b4d2451a93236b6ab2b0ae30")
runApp()
knitr::include_graphics("Figure_md/fig2.png")
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
runApp()
runApp()
runApp('~/Downloads/DrMxR_updates')
runApp('~/Downloads/DrMxR_updates')
runApp('~/Downloads/DrMxR_updates')
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
runApp('~/Downloads/DrMxR_updates')
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
install.packages("rsconnect")   # if not already installed
library(rsconnect)
shiny::runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
rsconnect::setAccountInfo(name='pverma',
token='06777A2D8D76287FC35E82EE22B28C79',
secret='ck0sWCSPSHhylVDpXnrXmucS2wuYSCzfojOMp4Eo')
rsconnect::deployApp(
appDir = "DrMxR_R_shinny",
appName = "DrMxR",             # exact app name
account = "pverma"             # your shinyapps.io account
)
getwd()
runApp('~/Documents/GitHub/genedrive/DrMxR_R_shinny')
setwd("~/Documents/GitHub/genedrive/DrMxR_R_shinny")
getwd()
list.dirs()
rsconnect::deployApp(
appDir = "DrMxR_R_shinny",
appName = "DrMxR",             # exact app name
account = "pverma"             # your shinyapps.io account
)
getwd()
rsconnect::deployApp("DrMxR_R_shinny")
getwd()
setwd("/Users/prateekverma/Documents/GitHub/genedrive/DrMxR_R_shinny")
list.dirs()
rsconnect::deployApp("DrMxR_R_shinny")
rsconnect::deployApp(
appDir = "/Users/prateekverma/Documents/GitHub/genedrive/DrMxR_R_shinny",
appName = "DrMxR",             # exact app name
account = "pverma"             # your shinyapps.io account
)
